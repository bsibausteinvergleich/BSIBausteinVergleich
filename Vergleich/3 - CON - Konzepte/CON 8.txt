3.1 Basis-Anforderungen

CON.8.A1 Definition von Rollen und Verantwortlichkeiten [Leiter Organisation] (B)
Für den Software-Entwicklungsprozess MUSS ein Gesamtverantwortlicher benannt werden.
Außerdem MÜSSEN die Rollen und Verantwortlichkeiten für alle Aktivitäten im Rahmen der Software-Entwicklung festgelegt werden.
Für jedes Entwicklungsprojekt MUSS ein Sicherheitsverantwortlicher benannt werden.

CON.8.A2 Auswahl eines Vorgehensmodells (B)
Es MUSS ein geeignetes Vorgehensmodell zur Software-Entwicklung festgelegt werden.
Anhand des gewählten Vorgehensmodells MUSS ein Ablaufplan für die Software-Entwicklung erstellt werden.
Die Sicherheitsanforderungen MÜSSEN dokumentiert werden.
Das Personal SOLLTE in der Methodik des gewählten Vorgehensmodells geschult sein.

CON.8.A3 Auswahl einer Entwicklungsumgebung (B)
Es MUSS eine Liste der erforderlichen und optionalen Auswahlkriterien für eine Entwicklungsumgebung vom Leiter Entwicklung erstellt werden.
Die Entwicklungsumgebung MUSS anhand der vorgegebenen Kriterien ausgewählt werden.

CON.8.A4 Einhaltung einer sicheren Vorgehensweise [Entwickler] (B)
Das ausgewählte Vorgehensmodell zur Software-Entwicklung, einschließlich der festgelegten Sicherheitsanforderungen, MUSS eingehalten werden.
Der entwickelte oder geänderte Quellcode MUSS auf Fehler gesichtet werden.
Externe Komponenten MÜSSEN auf Schwachstellen und potentielle Konflikte überprüft werden.

CON.8.A5 Sicheres Systemdesign (B)
Folgende Grundregeln des sicheren Systemdesigns MÜSSEN eingehalten werden:
• Grundsätzlich MÜSSEN alle Eingabedaten vor der Weiterverarbeitung geprüft und validiert werden.
• Bei Client-Server-Anwendungen MÜSSEN die Daten grundsätzlich auf dem Server validiert werden.
• Die Standardeinstellungen der Software MÜSSEN derart konfiguriert sein, dass ein sicherer Betrieb der Software ermöglicht wird.
• Bei Fehlern oder Ausfall von Komponenten des Systems DÜRFEN KEINE schützenswerten Informationen preisgegeben werden.
• Der Betrieb der Software MUSS mit möglichst geringen Benutzerprivilegien möglich sein.
Das Systemdesign MUSS dokumentiert werden.
Es MUSS überprüft werden, ob alle Sicherheitsanforderungen an das Systemdesign erfüllt wurden.

CON.8.A6 Verwendung von Bibliotheken aus vertrauenswürdigen Quellen (B)
Wird im Rahmen des Entwicklungs- und Implementierungsprozesses auf externe Bibliotheken zurückgegriffen, MÜSSEN diese aus vertrauenswürdigen Quellen bezogen werden.
Bevor sie verwendet werden, MUSS außerdem die Integrität der Bibliotheken geeignet sichergestellt werden.

CON.8.A7 Anwendung von Testverfahren [Tester] (B)
Vor der Freigabe neuer oder geänderter Softwareversionen MÜSSEN angemessene Tests durchgeführt werden, bei denen die Funktionalität und Sicherheit der Software auf dem Zielsystem geprüft wird.
Alle kritischen Grenzwerte MÜSSEN getestet werden.
Code Reviews und eine automatische statische Code-Analyse MÜSSEN durchgeführt werden.
Verwendete externe Bibliotheken MÜSSEN ebenfalls getestet werden.
Außerdem MUSS getestet werden, ob die Systemvoraussetzungen für die vorgesehene Software ausreichend dimensioniert sind.

CON.8.A8 Bereitstellung von Patches, Updates und Änderungen [Entwickler] (B)
Es MUSS sichergestellt sein, dass sicherheitskritische Patches und Updates zeitnah durch die Entwickler bereitgestellt und durch den IT-Betrieb eingespielt werden.
Dies betrifft auch verwendete externe Bibliotheken.
Für die Installations-, Update- oder Patchdateien MÜSSEN vom Entwickler digitale Signaturen bereitgestellt werden.

CON.8.A9 Berücksichtigung von Compliance-Anforderungen [Entwickler] (B)
Alle Compliance-Anforderungen, die institutionsweiten Sicherheitsrichtlinien, die rechtlichen Anforderungen und die spezifischen Sicherheitsanforderungen MÜSSEN bei der Software-Entwicklung ermittelt und berücksichtigt werden.

CON.8.A10 Versionsverwaltung des Quellcodes [Entwickler] (B)
Das Entwicklungsprojekt (Quellcode des Projektes) MUSS über eine geeignete Versionsverwaltung verwaltet werden.
Der Leiter Entwicklung MUSS den Zugriff auf die Versionsverwaltung regeln und festlegen, wann Änderungen am Quellcode durch die Entwickler als eigene Version in der Versionsverwaltung gespeichert werden sollen.
Es MUSS sichergestellt sein, dass durch die Versionsverwaltung alle Änderungen am Quellcode nachvollzogen und rückgängig gemacht werden können.
Die Versionsverwaltung MUSS in dem Datensicherungskonzept berücksichtigt werden und DARF NICHT ohne Datensicherung erfolgen.


3.2 Standard-Anforderungen

CON.8.A11 Erstellung einer Richtlinie für die Software-Entwicklung (S)
Es SOLLTE eine Richtlinie für die Software-Entwicklung erstellt und aktuell gehalten werden.
Die Richtlinie SOLLTE neben Namenskonventionen auch Vorgaben zu Elementen beinhalten, die verwendet bzw. nicht verwendet werden dürfen.
Die relevanten Anforderungen aus diesem Baustein SOLLTEN in die Richtlinie aufgenommen werden.
Die Richtlinie SOLLTE für die Entwickler verbindlich sein.

CON.8.A12 Ausführliche Dokumentation (S)
Es SOLLTEN ausreichende Projekt-, Funktions- und Schnittstellendokumentationen erstellt und aktuell gehalten werden.
Benutzern und Administratoren SOLLTEN geeignete Hilfen zur korrekten Nutzung bzw. Administration der Software zur Verfügung gestellt werden.
Die Software-Entwicklung SOLLTE so dokumentiert sein, dass ein Fachexperte mithilfe der Dokumentation den Programm-Code nachvollziehen und weiterentwickeln kann.

CON.8.A13 Beschaffung von Werkzeugen (S)
Werkzeuge für die Software-Entwicklung SOLLTEN nach standardisierten und dokumentierten Vorgehensweisen beschafft werden.

CON.8.A14 Schulung des Projektteams zur Informationssicherheit (S)
Die Entwickler und die übrigen Mitglieder des Projektteams SOLLTEN zu generellen Informationssicherheitsaspekten und zu den jeweils speziell für sie relevanten Aspekten geschult sein.

CON.8.A15 Sicherer Einsatz der Test- und Entwicklungsumgebungen [Entwickler] (S)
Die Test- und Entwicklungsumgebungen SOLLTEN getrennt von der Produktionsumgebung betrieben werden.
Informationen, die für den Produktivbetrieb nicht relevant sind, SOLLTEN möglichst entfernt werden, bevor die Programmpakete in die Produktionsumgebung überführt werden.
Testdaten SOLLTEN sorgfältig ausgewählt und geschützt werden.
Verteilte Arbeitsplätze der Software-Entwicklung SOLLTEN über eine sichere Verbindung miteinander kommunizieren.
Der Zugriff auf die Entwicklungsdaten SOLLTE kontrolliert sein.

CON.8.A16 Geeignete Steuerung der Software-Entwicklung (S)
Bei einer Software-Entwicklung SOLLTE ein geeignetes Steuerungs- und Projektmanagementmodell auf Basis des ausgewählten Vorgehensmodells verwendet werden und in die Richtlinie zur Software-Entwicklung integriert werden.
Dabei SOLLTEN insbesondere die benötigten Qualifikationen beim Personal und die Abdeckung aller relevanten Phasen während des Lebenszyklus der Software berücksichtigt werden.
Außerdem SOLLTE ein geeignetes Entwicklungsmodell und Risikomanagement sowie geeignete Qualitätsziele festgelegt werden.
Werden Teile der Software-Entwicklung extern durchgeführt, SOLLTE dies geeignet in die internen Steuerungs- und Sicherheitsprozesse eingebunden werden.


3.3 Anforderungen bei erhöhtem Schutzbedarf

CON.8.A17 Auswahl vertrauenswürdiger Entwicklungswerkzeuge (H)
Zur Entwicklung der Software SOLLTEN nur Werkzeuge mit nachgewiesenen Sicherheitseigenschaften verwendet werden.
Es SOLLTE sichergestellt sein, dass die Werkzeuge nicht manipuliert werden können.
An die Hersteller von Hardware oder Software SOLLTEN hinreichende Anforderungen zur Sicherheit ihrer Werkzeuge gestellt werden.

CON.8.A18 Regelmäßige Sicherheitsaudits für die Entwicklungsumgebung (H)
Es SOLLTEN regelmäßige Sicherheitsaudits der Software-Entwicklungsumgebung und der Software-Testumgebung durchgeführt werden.

CON.8.A19 Regelmäßige Integritätsprüfung der Entwicklungsumgebung [IT-Betrieb] (H)
Die Integrität der Entwicklungsumgebung SOLLTE regelmäßig mit kryptographischen Mechanismen entsprechend dem Stand der Technik geprüft werden.
Die Prüfsummendateien und das Prüfprogramm selbst SOLLTEN ausreichend vor Manipulationen geschützt sein.
Wichtige Hinweise auf einen Integritätsverlust SOLLTEN nicht in einer Fülle irrelevanter Warnmeldungen (false positives) untergehen.